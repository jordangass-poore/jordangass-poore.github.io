{"version":3,"sources":["webpack:///./src/components/PreviewImage.js","webpack:///./src/components/NodesList.js","webpack:///./src/styles/fwAllNodes.module.css","webpack:///./src/templates/allAchievement-page.js","webpack:///./src/styles/strongSlantAllNodes.module.css","webpack:///./src/components/SortDown.js"],"names":["PreviewImage","props","previewImage","isFluid","origImage","imageObject","aNode","fields","imgObj","childImageSharp","fluid","publicURL","previewEl","sources","Object","assign","media","alt","className","styles","bbImageWrapper","src","noImg","path","basename","data-orig-image","id","style","NodesList","useState","filteredData","query","topicQuery","formatQuery","edgeList","baseOfLink","baseOfObject","allNodesStyles","nodeSortContainer","type","aria-label","placeholder","onChange","e","handleInputChange","formInput","sorters","nodeSetContainer","map","node","key","nodeSingle","to","slug","listImage","textDecoration","title","extraFields","pretext","content","HumanReadableDate","date","module","exports","data","post","file","childMarkdownRemark","state","setState","allAchievement","edges","fnw","stylesNodes","allNodesHeader","basicContainer","display","float","position","top","paddingLeft","frontmatter","subType","dangerouslySetInnerHTML","__html","html","event","target","value","filter","description","toLowerCase","includes","SortDown","pdStart","edgeParam","edgeParamter","topicPullDownLimited","reduce","accumulator","currentValue","push","sort","pullDownList","nameOfSort","formDropdown","capitalize","htmlFor","handleChange"],"mappings":"4OAwDeA,EAjDM,SAAAC,GACpB,IACIC,EAAcC,EAASC,EADvBC,EAAcJ,EAAMK,MAAMC,OAAOC,OAEjCH,IACCA,EAAYI,iBAAmBJ,EAAYI,gBAAgBC,OAC9DR,EAAeG,EAAYI,gBAAgBC,MAC3CP,GAAU,GACAE,EAAYM,YACtBT,EAAeG,EAAYM,YAGzBN,GAAeA,EAAYM,YAC9BP,EAAYC,EAAYM,WAEzB,IAAIC,EAAY,KAChB,GAAIV,GAAgBC,EAAS,CAC5B,IAIMU,EAAU,CAJQC,OAAOC,OAC9B,CAAEC,MAAM,sBACRX,EAAYI,gBAAgBC,QAG7BE,EAAY,kBAAC,IAAD,CAAKF,MAAOG,EAASI,IAAI,GAAGC,UAAWC,IAAOC,sBAE1DR,EADUV,EAET,yBAAKmB,IAAKnB,EAAce,IAAI,GAAGC,UAAWC,IAAOC,iBAGtC,yBAAKF,UAAWC,IAAOG,QAUpC,OAPElB,GACoB,iBAAdA,GACqB,qBAA5BmB,IAAKC,SAASpB,KAEdQ,EAAY,yBAAKM,UAAWC,IAAOG,SAInC,yBACCG,kBAAiBrB,EACjBc,UAAWjB,EAAMiB,UACjBQ,GAAIzB,EAAMyB,GACVC,MAAO1B,EAAM0B,OAEZf,I,wBCwBWgB,IAnEG,SAAA3B,GACjB,IAD0B,EAKA4B,mBAAS,CAClCC,aAAc,GACdC,MANkB,GAOlBC,WANuB,GAOvBC,YANwB,KASnBC,GAZoB,UAYqCjC,EAAzDiC,UAAUP,EAA+C1B,EAA/C0B,MAAOT,EAAwCjB,EAAxCiB,UAAWiB,EAA6BlC,EAA7BkC,WAAYC,EAAiBnC,EAAjBmC,aAG9C,OACC,yBAAKT,MAAOA,EAAOT,UAAWA,GAC7B,yBAAKQ,GAAIW,IAAeC,mBACvB,2BACCC,KAAK,OACLC,aAAW,SACXC,YAAY,0BACZC,SAAU,SAAAC,GAAC,OAAI1C,EAAM2C,kBAAkBD,IACvCzB,UAAWmB,IAAeQ,YAE1B5C,EAAM6C,SAER,wBAAI5B,UAAWmB,IAAeU,kBAC5Bb,EAASc,KAAI,SAAAC,GAAI,OACjB,wBAAIC,IAAKD,EAAKA,KAAKvB,GAAIR,UAAWmB,IAAec,YAChD,kBAAC,IAAD,CACCC,GAAI,IAAMjB,EAAac,EAAKA,KAAKb,GAAciB,KAC/CH,IAAKD,EAAKA,KAAKvB,IAEf,kBAAC,EAAD,CACCpB,MAAO2C,EAAKA,KACZ/B,UAAWmB,IAAeiB,YAE3B,0BACC3B,MAAO,CACN4B,eAAgB,cAGjB,4BAAKN,EAAKA,KAAKb,GAAcoB,OAC5BvD,EAAMwD,YAAYT,KAAI,YAAuB,IAApBE,EAAmB,EAAnBA,IAAKQ,EAAc,EAAdA,QAC9B,GAAIT,EAAKA,KAAKb,GAAcc,GAAM,CACjC,IAAIS,EAAUV,EAAKA,KAAKb,GAAcc,GAItC,MAHY,SAARA,IACHS,EAAU,kBAACC,EAAA,EAAD,CAAmBC,KAAMF,KAGnC,wBAAIT,IAAKA,EAAM,IAAMD,EAAKA,KAAKvB,IAC7BgC,EACAC,iB,qBC5DbG,EAAOC,QAAU,CAAC,kBAAoB,gDAAgD,eAAiB,6CAA6C,kBAAoB,gDAAgD,iBAAmB,+CAA+C,WAAa,wCAAwC,UAAY,uCAAuC,qBAAuB,oDAAoD,UAAY,uCAAuC,aAAe,0CAA0C,WAAa,yC,kCCDtkB,2JAoBe,mBAAAC,GACd,IAAMC,EAAOD,EAAKA,KAAKE,KAAKC,oBADN,EAQItC,mBAAS,CAClCC,aAAc,GACdC,MANkB,KAIZqC,EARe,KAQRC,EARQ,KAahBnC,EAAW8B,EAAKA,KAAKM,eAAeC,MA0BlCzC,EAAwBsC,EAAxBtC,aAAcC,EAAUqC,EAAVrC,MAEhBwC,EADmBzC,GApCN,KAoCsBC,EACRD,EAAeI,EAEhD,OACC,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,0BAAMhB,UAAWC,IAAOqD,OAEzB,6BACC,yBAAK9C,GAAI+C,IAAYC,eAAgBxD,UAAWC,IAAOwD,gBACtD,kBAAC,IAAD,CACChD,MAAO,CACNiD,QAAS,QACTC,MAAO,OACPC,SAAU,WACVC,IAAK,oBACLC,YAAa,SANf,iBASgBf,EAAKgB,YAAYC,SAEjC,4BAAKjB,EAAKgB,YAAYzB,OACtB,yBAAK2B,wBAAyB,CAAEC,OAAQnB,EAAKoB,SAE9C,kBAAC,IAAD,CACCnD,SAAUqC,EACVpC,WAAW,eACXC,aAAa,cACbqB,YAAa,CACZ,CAAEP,IAAK,OAAQQ,QAAS,gBACxB,CAAER,IAAK,cAAeQ,QAAS,gBAEhCd,kBAxDsB,SAAA0C,GACzB,IAAMvD,EAAQuD,EAAMC,OAAOC,MAIrB1D,GAFQI,GAAY,IAECuD,QAAO,SAAAxC,GAAQ,MAEDA,EAAKA,KAAL,KAAhCyC,EAFiC,EAEjCA,YAAalC,EAFoB,EAEpBA,MAAOG,EAFa,EAEbA,QAO5B,OALC+B,EAAYC,cAAcC,SAAS7D,EAAM4D,gBACzCnC,EAAMmC,cAAcC,SAAS7D,EAAM4D,gBACnChC,EAAQgC,cAAcC,SAAS7D,EAAM4D,kBAMvCtB,EAAS,CACRtC,QACAD,kBAsCEgB,QAAS,S,qBC5FdgB,EAAOC,QAAU,CAAC,kBAAoB,yDAAyD,eAAiB,sDAAsD,kBAAoB,yDAAyD,iBAAmB,wDAAwD,WAAa,iDAAiD,UAAY,gDAAgD,qBAAuB,6DAA6D,UAAY,gDAAgD,aAAe,mDAAmD,WAAa,kD,0FCyCxoB8B,IAvCE,SAAA5F,GAChB,IAAI6F,EAAU,4BAAQN,MAAM,IAAd,OACVpD,EAAenC,EAAMmC,aACrB2D,EAAY9F,EAAM+F,aAElBC,EAAuBhG,EAAMiC,SAASgE,QACzC,SAACC,EAAaC,GAIb,OAHKD,EAAYP,SAASQ,EAAanD,KAAKb,GAAc2D,KACzDI,EAAYE,KAAKD,EAAanD,KAAKb,GAAc2D,IAE3CI,IAER,IAEDF,EAAqBK,OACrB,IAAIC,EAAeN,EAAqBjD,KAAI,SAAAoD,GAC3C,OACC,4BACCZ,MAAOY,EAAaT,cACpBzC,IAAKkD,EAAaT,eAEjBS,MAKEI,EAAaT,EAEnB,OACC,yBAAK7E,UAAWmB,IAAeoE,cAC9B,2BAAOvF,UAAWmB,IAAeqE,WAAYC,QAAYZ,EAAL,KAAoBS,EAAxE,MACA,4BAAQ9E,GAAOqE,EAAL,IAAmBrD,SAAU,SAAAC,GAAC,OAAI1C,EAAM2G,aAAajE,KAC7DmD,EACAS","file":"component---src-templates-all-achievement-page-js-66ae20a284e66f96ec6a.js","sourcesContent":["import React, { useState } from \"react\"\nimport allNodesStyles from \"../styles/fwAllNodes.module.css\"\nimport styles from \"../styles/strongSlant.module.css\"\nimport Link from \"gatsby-link\"\nimport Img from \"gatsby-image\"\nimport path from \"path\"\n\nconst PreviewImage = props => {\n\tvar imageObject = props.aNode.fields.imgObj\n\tvar previewImage, isFluid, origImage\n\tif (imageObject) {\n\t\tif (imageObject.childImageSharp && imageObject.childImageSharp.fluid) {\n\t\t\tpreviewImage = imageObject.childImageSharp.fluid\n\t\t\tisFluid = true\n\t\t} else if (imageObject.publicURL) {\n\t\t\tpreviewImage = imageObject.publicURL\n\t\t}\n\t}\n\tif (imageObject && imageObject.publicURL) {\n\t\torigImage = imageObject.publicURL\n\t}\n\tvar previewEl = null\n\tif (previewImage && isFluid) {\n\t\tconst previewImageObj = Object.assign(\n\t\t\t{ media: `(max-width: 300px)` },\n\t\t\timageObject.childImageSharp.fluid\n\t\t)\n\t\tconst sources = [previewImageObj]\n\t\tpreviewEl = <Img fluid={sources} alt=\"\" className={styles.bbImageWrapper} />\n\t} else if (previewImage) {\n\t\tpreviewEl = (\n\t\t\t<img src={previewImage} alt=\"\" className={styles.bbImageWrapper} />\n\t\t)\n\t} else {\n\t\tpreviewEl = <div className={styles.noImg}></div>\n\t}\n\tif (\n\t\t!origImage ||\n\t\ttypeof origImage !== \"string\" ||\n\t\tpath.basename(origImage) == \"Transparent-l.png\"\n\t) {\n\t\tpreviewEl = <div className={styles.noImg}></div>\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tdata-orig-image={origImage}\n\t\t\tclassName={props.className}\n\t\t\tid={props.id}\n\t\t\tstyle={props.style}\n\t\t>\n\t\t\t{previewEl}\n\t\t</div>\n\t)\n}\n\nexport default PreviewImage\n","import React, { useState } from \"react\"\nimport allNodesStyles from \"../styles/strongSlantAllNodes.module.css\"\nimport styles from \"../styles/strongSlant.module.css\"\nimport Link from \"gatsby-link\"\nimport PreviewImage from \"./PreviewImage\"\nimport SortDown from \"../components/SortDown\"\nimport HumanReadableDate from \"../components/HumanReadableDate\"\n\nconst NodesList = props => {\n\tconst emptyQuery = \"\"\n\tconst emptyTopicQuery = \"\"\n\tconst emptyFormatQuery = \"\"\n\n\tconst [state, setState] = useState({\n\t\tfilteredData: [],\n\t\tquery: emptyQuery,\n\t\ttopicQuery: emptyTopicQuery,\n\t\tformatQuery: emptyFormatQuery,\n\t})\n\n\tlet { edgeList, style, className, baseOfLink, baseOfObject } = props\n\n\t// TODO: Add sort by publication\n\treturn (\n\t\t<div style={style} className={className}>\n\t\t\t<div id={allNodesStyles.nodeSortContainer}>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\taria-label=\"Search\"\n\t\t\t\t\tplaceholder=\"Type to filter posts...\"\n\t\t\t\t\tonChange={e => props.handleInputChange(e)}\n\t\t\t\t\tclassName={allNodesStyles.formInput}\n\t\t\t\t/>\n\t\t\t\t{props.sorters}\n\t\t\t</div>\n\t\t\t<ul className={allNodesStyles.nodeSetContainer}>\n\t\t\t\t{edgeList.map(node => (\n\t\t\t\t\t<li key={node.node.id} className={allNodesStyles.nodeSingle}>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tto={\"/\" + baseOfLink + node.node[baseOfObject].slug}\n\t\t\t\t\t\t\tkey={node.node.id}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<PreviewImage\n\t\t\t\t\t\t\t\taNode={node.node}\n\t\t\t\t\t\t\t\tclassName={allNodesStyles.listImage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\ttextDecoration: \"underline\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<h5>{node.node[baseOfObject].title}</h5>\n\t\t\t\t\t\t\t\t{props.extraFields.map(({ key, pretext }) => {\n\t\t\t\t\t\t\t\t\tif (node.node[baseOfObject][key]) {\n\t\t\t\t\t\t\t\t\t\tlet content = node.node[baseOfObject][key]\n\t\t\t\t\t\t\t\t\t\tif (key === \"date\") {\n\t\t\t\t\t\t\t\t\t\t\tcontent = <HumanReadableDate date={content} />\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<h6 key={key + \"_\" + node.node.id}>\n\t\t\t\t\t\t\t\t\t\t\t\t{pretext}\n\t\t\t\t\t\t\t\t\t\t\t\t{content}\n\t\t\t\t\t\t\t\t\t\t\t</h6>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</div>\n\t)\n}\n\nexport default NodesList\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allNodesContainer\":\"fwAllNodes-module--all-nodes-container--1y7CY\",\"allNodesHeader\":\"fwAllNodes-module--all-nodes-header--mmN2q\",\"nodeSortContainer\":\"fwAllNodes-module--node-sort-container--1nqk1\",\"nodeSetContainer\":\"fwAllNodes-module--node-set-container--1w3V6\",\"nodeSingle\":\"fwAllNodes-module--node-single--qRjYM\",\"listImage\":\"fwAllNodes-module--list-image--2BmxY\",\"nodeSingleInnerLayer\":\"fwAllNodes-module--node-single-inner-layer--1vTXZ\",\"formInput\":\"fwAllNodes-module--form-input--3c7_z\",\"formDropdown\":\"fwAllNodes-module--form-dropdown--10A5f\",\"capitalize\":\"fwAllNodes-module--capitalize--2STMX\"};","import React, { useState } from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Link from \"gatsby-link\"\nimport NodesList from \"../components/NodesList\"\nimport styles from \"../styles/strongSlant.module.css\"\nimport stylesNodes from \"../styles/strongSlantAllNodes.module.css\"\nimport BreadCrumb from \"../components/BreadCrumb\"\nimport SortDown from \"../components/SortDown\"\nimport Helmet from \"react-helmet\"\n/**\n *\n\t\t\t\t<NodesList\n\t\t\t\t\tedgeList={data.data.allAchievement.edges}\n\t\t\t\t\tbaseOfLink=\"achievement/\"\n\t\t\t\t\tbaseOfObject=\"achievement\"\n\t\t\t\t\textraFields={[\"affiliation\"]}\n\t\t\t\t/>\n */\n\nexport default data => {\n\tconst post = data.data.file.childMarkdownRemark\n\tconst baseOfObject = \"clip\"\n\n\tconst emptyQuery = \"\"\n\tconst emptyTopicQuery = \"\"\n\tconst emptyFormatQuery = \"\"\n\n\tconst [state, setState] = useState({\n\t\tfilteredData: [],\n\t\tquery: emptyQuery,\n\t})\n\n\tconst edgeList = data.data.allAchievement.edges\n\n\t// From: https://www.aboutmonica.com/blog/create-gatsby-blog-search-tutorial\n\tconst handleInputChange = event => {\n\t\tconst query = event.target.value\n\t\t// this is how we get all of our posts\n\t\tconst edges = edgeList || []\n\t\t// return all filtered posts\n\t\tconst filteredData = edges.filter(node => {\n\t\t\t// destructure data from post frontmatter\n\t\t\tconst { description, title, content } = node.node[baseOfObject]\n\t\t\tlet validity =\n\t\t\t\tdescription.toLowerCase().includes(query.toLowerCase()) ||\n\t\t\t\ttitle.toLowerCase().includes(query.toLowerCase()) ||\n\t\t\t\tcontent.toLowerCase().includes(query.toLowerCase()) // ||\n\t\t\t// topic.toLowerCase().includes(state.topicQuery.toLowerCase())\n\n\t\t\treturn validity\n\t\t})\n\t\t// update state according to the latest query and results\n\t\tsetState({\n\t\t\tquery, // with current query string from the `Input` event\n\t\t\tfilteredData, // with filtered data from posts.filter(post => (//filteredData)) above\n\t\t})\n\t}\n\n\tconst { filteredData, query } = state\n\tconst hasSearchResults = filteredData && query !== emptyQuery\n\tconst edges = hasSearchResults ? filteredData : edgeList\n\t// console.log(\"Data: \", data.data)\n\treturn (\n\t\t<Layout>\n\t\t\t<Helmet>\n\t\t\t\t<body className={styles.fnw} />\n\t\t\t</Helmet>\n\t\t\t<div>\n\t\t\t\t<div id={stylesNodes.allNodesHeader} className={styles.basicContainer}>\n\t\t\t\t\t<BreadCrumb\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tdisplay: \"block\",\n\t\t\t\t\t\t\tfloat: \"left\",\n\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\ttop: \"calc(3rem - 34px)\",\n\t\t\t\t\t\t\tpaddingLeft: \"20px\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tAchievements: {post.frontmatter.subType}\n\t\t\t\t\t</BreadCrumb>\n\t\t\t\t\t<h1>{post.frontmatter.title}</h1>\n\t\t\t\t\t<div dangerouslySetInnerHTML={{ __html: post.html }} />\n\t\t\t\t</div>\n\t\t\t\t<NodesList\n\t\t\t\t\tedgeList={edges}\n\t\t\t\t\tbaseOfLink=\"achievement/\"\n\t\t\t\t\tbaseOfObject=\"achievement\"\n\t\t\t\t\textraFields={[\n\t\t\t\t\t\t{ key: \"date\", pretext: \"Achieved on \" },\n\t\t\t\t\t\t{ key: \"affiliation\", pretext: \"Granted by \" },\n\t\t\t\t\t]}\n\t\t\t\t\thandleInputChange={handleInputChange}\n\t\t\t\t\tsorters={[]}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</Layout>\n\t)\n}\n\nexport const query = graphql`\n\tquery($slug: String!, $isList: Boolean!, $subType: String) {\n\t\tfile(fields: { slug: { eq: $slug } }) {\n\t\t\trelativePath\n\t\t\tbase\n\t\t\tname\n\t\t\tsourceInstanceName\n\t\t\tinternal {\n\t\t\t\ttype\n\t\t\t\tcontentDigest\n\t\t\t\tdescription\n\t\t\t\tmediaType\n\t\t\t}\n\t\t\tfields {\n\t\t\t\tslug\n\t\t\t}\n\t\t\tchildMarkdownRemark {\n\t\t\t\tid\n\t\t\t\thtml\n\t\t\t\tfrontmatter {\n\t\t\t\t\ttitle\n\t\t\t\t\tsubType\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tallAchievement(\n\t\t\tsort: { fields: achievement___date, order: DESC }\n\t\t\tfilter: { achievement: { type: { eq: $subType } } }\n\t\t) @include(if: $isList) {\n\t\t\ttotalCount\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\tachievement {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tdate\n\t\t\t\t\t\tcontent\n\t\t\t\t\t\taffiliation\n\t\t\t\t\t\ttype\n\t\t\t\t\t\tmedia\n\t\t\t\t\t\tdescription\n\t\t\t\t\t\timageSource\n\t\t\t\t\t\tisBasedOn\n\t\t\t\t\t\tslug\n\t\t\t\t\t}\n\t\t\t\t\tfields {\n\t\t\t\t\t\timgObj {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\tpublicURL\n\t\t\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\t\t\tfluid(maxWidth: 300) {\n\t\t\t\t\t\t\t\t\t...GatsbyImageSharpFluid\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allNodesContainer\":\"strongSlantAllNodes-module--all-nodes-container--3AcTC\",\"allNodesHeader\":\"strongSlantAllNodes-module--all-nodes-header--16-IR\",\"nodeSortContainer\":\"strongSlantAllNodes-module--node-sort-container--2aK4r\",\"nodeSetContainer\":\"strongSlantAllNodes-module--node-set-container--1V0MG\",\"nodeSingle\":\"strongSlantAllNodes-module--node-single--28IFJ\",\"listImage\":\"strongSlantAllNodes-module--list-image--ByO2H\",\"nodeSingleInnerLayer\":\"strongSlantAllNodes-module--node-single-inner-layer--ZJXkw\",\"formInput\":\"strongSlantAllNodes-module--form-input--1rBEz\",\"formDropdown\":\"strongSlantAllNodes-module--form-dropdown--2fBbI\",\"capitalize\":\"strongSlantAllNodes-module--capitalize--3AWne\"};","import React from \"react\"\nimport allNodesStyles from \"../styles/fwAllNodes.module.css\"\n\nconst SortDown = props => {\n\tlet pdStart = <option value=\"\">All</option>\n\tlet baseOfObject = props.baseOfObject\n\tlet edgeParam = props.edgeParamter\n\t// TODO: Alphabatize this\n\tlet topicPullDownLimited = props.edgeList.reduce(\n\t\t(accumulator, currentValue) => {\n\t\t\tif (!accumulator.includes(currentValue.node[baseOfObject][edgeParam])) {\n\t\t\t\taccumulator.push(currentValue.node[baseOfObject][edgeParam])\n\t\t\t}\n\t\t\treturn accumulator\n\t\t},\n\t\t[]\n\t)\n\ttopicPullDownLimited.sort()\n\tlet pullDownList = topicPullDownLimited.map(currentValue => {\n\t\treturn (\n\t\t\t<option\n\t\t\t\tvalue={currentValue.toLowerCase()}\n\t\t\t\tkey={currentValue.toLowerCase()}\n\t\t\t>\n\t\t\t\t{currentValue}\n\t\t\t</option>\n\t\t)\n\t})\n\n\tconst nameOfSort = edgeParam\n\n\treturn (\n\t\t<div className={allNodesStyles.formDropdown}>\n\t\t\t<label className={allNodesStyles.capitalize} htmlFor={`${edgeParam}s`}>{nameOfSort}: </label>\n\t\t\t<select id={`${edgeParam}s`} onChange={e => props.handleChange(e)}>\n\t\t\t\t{pdStart}\n\t\t\t\t{pullDownList}\n\t\t\t</select>\n\t\t</div>\n\t)\n}\n\nexport default SortDown\n"],"sourceRoot":""}