{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/templates/allClip-page.js"],"names":["children","style","margin","width","data","post","file","childMarkdownRemark","frontmatter","title","dangerouslySetInnerHTML","__html","html","allClip","edges","map","node","key","id","to","clip","slug","textDecoration","query"],"mappings":"2FAAA,yBAEe,oBAAGA,EAAH,EAAGA,SAAH,OACd,yBACCC,MAAO,CACNC,OAAO,YACPC,MAAO,SAKPH,K,kCCXH,iHAQe,mBAAAI,GACd,IAAMC,EAAOD,EAAKA,KAAKE,KAAKC,oBAE5B,OACC,kBAAC,IAAD,KACC,6BACC,4BAAKF,EAAKG,YAAYC,OACtB,yBAAKC,wBAAyB,CAAEC,OAAQN,EAAKO,QAC7C,4BACER,EAAKA,KAAKS,QAAQC,MAAMC,KAAI,SAAAC,GAAI,OAChC,wBAAIC,IAAKD,EAAKA,KAAKE,IAClB,kBAAC,IAAD,CAAMC,GAAI,SAAWH,EAAKA,KAAKI,KAAKC,KAAMJ,IAAKD,EAAKA,KAAKE,IACxD,0BACCjB,MAAO,CACNqB,eAAgB,cAGjB,4BAAKN,EAAKA,KAAKI,KAAKX,iBAWtB,IAAMc,EAAK","file":"component---src-templates-all-clip-page-js-c72845e34f613e41b994.js","sourcesContent":["import React from \"react\"\n\nexport default ({ children }) => (\n\t<div\n\t\tstyle={{\n\t\t\tmargin: `3rem auto`,\n\t\t\twidth: \"100%\",\n\t\t\t// maxWidth: \"80vw\",\n\t\t\t// padding: `0 1rem`,\n\t\t}}\n\t>\n\t\t{children}\n\t</div>\n)\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Link from \"gatsby-link\"\nimport styles from \"../styles/glitchFrenchWave.module.css\"\n\n// Cards are topic=Features, format=text, format=audio\n\nexport default data => {\n\tconst post = data.data.file.childMarkdownRemark\n\t// console.log(\"Data: \", data.data)\n\treturn (\n\t\t<Layout>\n\t\t\t<div>\n\t\t\t\t<h1>{post.frontmatter.title}</h1>\n\t\t\t\t<div dangerouslySetInnerHTML={{ __html: post.html }} />\n\t\t\t\t<ul>\n\t\t\t\t\t{data.data.allClip.edges.map(node => (\n\t\t\t\t\t\t<li key={node.node.id}>\n\t\t\t\t\t\t\t<Link to={\"/clip/\" + node.node.clip.slug} key={node.node.id}>\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\ttextDecoration: \"underline\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<h5>{node.node.clip.title}</h5>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</Layout>\n\t)\n}\n\nexport const query = graphql`\n\tquery($slug: String!, $isList: Boolean!) {\n\t\tfile(fields: { slug: { eq: $slug } }) {\n\t\t\trelativePath\n\t\t\tbase\n\t\t\tname\n\t\t\tsourceInstanceName\n\t\t\tinternal {\n\t\t\t\ttype\n\t\t\t\tcontentDigest\n\t\t\t\tdescription\n\t\t\t\tmediaType\n\t\t\t}\n\t\t\tfields {\n\t\t\t\tslug\n\t\t\t}\n\t\t\tchildMarkdownRemark {\n\t\t\t\tid\n\t\t\t\thtml\n\t\t\t\tfrontmatter {\n\t\t\t\t\ttitle\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tallClip(sort: { fields: clip___date, order: DESC }) @include(if: $isList) {\n\t\t\ttotalCount\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\tclip {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tdate\n\t\t\t\t\t\tisBasedOn\n\t\t\t\t\t\tformat\n\t\t\t\t\t\ttopic\n\t\t\t\t\t\tpublishedBy\n\t\t\t\t\t\tlocation\n\t\t\t\t\t\tmedia\n\t\t\t\t\t\timageSource\n\t\t\t\t\t\tdescription\n\t\t\t\t\t\tcontent\n\t\t\t\t\t\tslug\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`\n"],"sourceRoot":""}