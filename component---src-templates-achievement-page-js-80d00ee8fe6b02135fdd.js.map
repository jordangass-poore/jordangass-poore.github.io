{"version":3,"sources":["webpack:///./src/components/Meta/SchemaOrg.js","webpack:///./src/components/Meta/Twitter.js","webpack:///./src/components/Meta/OpenGraph.js","webpack:///./src/components/SEO.js","webpack:///./src/templates/achievement-page.js"],"names":["SchemaOrg","isType","url","title","author","image","siteImage","siteUrl","description","datePublished","siteDescription","typeMeta","alternateName","givenName","familyName","keywords","defaultJSONLD","name","typeContent","sameAs","publishingPrinciples","isBasedOn","typeTags","articleSection","section","headline","publisher_name","publisher","logo","join","map","meta","property","key","content","value","forEach","tag","push","dateModified","Date","toISOString","isAccessibleForFree","productID","Fragment","defer","type","JSON","stringify","Twitter","props","twitter","OpenGraph","fbAppId","siteName","Object","keys","SEO","postMeta","postPath","postDefaults","useSiteMetadata","fbAppID","defaultDescription","pageTitle","pageDescription","excerpt","postImage","pageUrl","path","sep","published_time","topic","completeKeywords","Array","isArray","includes","keywordsString","className","styles","fnw","date","defaultProps","data","pageContext","console","log","previewImage","isFluid","achievementObj","achievement","queryResult","origImage","fields","imgObj","childImageSharp","fluid","publicURL","previewEl","alt","bbImageWrapper","src","noImg","originalContent","archivedContent","awardedBy","publisherUrl","affiliation","clipLink","href","e","awardDate","archiveFile","mediaFile","media","spacer","target","rel","humanReadableDate","previousLink","nextLink","homeLink","to","style","textDecoration","previous","slug","id","next","imgBlock","test","data-img","flexCol","publishedBy","basicContainer","display","float","position","top","paddingLeft","precursors","link","toLowerCase","text","clipTitle","flexRow","bbDataHolder","dangerouslySetInnerHTML","__html","marginTop","lineHeight","paddingBottom"],"mappings":"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","file":"component---src-templates-achievement-page-js-80d00ee8fe6b02135fdd.js","sourcesContent":["import React from \"react\"\nimport Helmet from \"react-helmet\"\n\nconst SchemaOrg = ({\n\tisType,\n\turl,\n\ttitle,\n\tauthor,\n\timage,\n\tsiteImage,\n\tdescription,\n\tdatePublished,\n\tsiteUrl,\n\tsiteDescription,\n\ttypeMeta,\n\talternateName,\n\tgivenName,\n\tfamilyName,\n\tkeywords,\n}) => {\n\tconst defaultJSONLD = {\n\t\t\"@context\": \"http://schema.org\",\n\t\t\"@type\": \"WebSite\",\n\t\turl: siteUrl,\n\t\tname: title,\n\t\talternateName: alternateName,\n\t}\n\n\tlet typeContent = {}\n\ttypeContent.url = url\n\ttypeContent[\"author\"] = {\n\t\t\"@type\": \"Person\",\n\t\tname: author,\n\t\tdescription: siteDescription,\n\t\tsameAs: siteUrl,\n\t\timage: {\n\t\t\t\"@type\": \"ImageObject\",\n\t\t\turl: siteImage,\n\t\t},\n\t\tgivenName: givenName,\n\t\tfamilyName: familyName,\n\t\talternateName: alternateName,\n\t\tpublishingPrinciples: siteUrl + \"/about/\",\n\t}\n\ttypeContent[\"publisher\"] = typeContent[\"author\"]\n\ttypeContent[\"mainEntityOfPage\"] = {\n\t\t\"@type\": \"WebPage\",\n\t\t\"@id\": url,\n\t}\n\n\tif (typeMeta.isBasedOn) {\n\t\ttypeContent.isBasedOn = typeMeta.isBasedOn\n\t}\n\n\ttypeContent[\"@context\"] = \"http://schema.org\"\n\n\tif (image) {\n\t\ttypeContent[\"image\"] = [image]\n\t}\n\n\tlet typeTags = null\n\tswitch (isType) {\n\t\tcase \"website\":\n\t\t\ttypeContent = defaultJSONLD\n\t\t\tbreak\n\t\tcase \"blog\":\n\t\t\ttypeContent[\"@type\"] = \"BlogPosting\"\n\t\t\ttypeContent.articleSection = typeMeta.section\n\t\t\ttypeContent.headline = title\n\t\t\ttypeContent[\"publisher\"] = {\n\t\t\t\t\"@type\": \"Organization\",\n\t\t\t\tname: typeMeta.publisher_name,\n\t\t\t\tdescription: \"A news site.\",\n\t\t\t\tsameAs: typeMeta.publisher,\n\t\t\t\tlogo: \"\",\n\t\t\t}\n\t\t\ttypeContent.keywords = keywords.join(\",\")\n\t\t\tbreak\n\t\t// eslint-disable-next-line no-fallthrough\n\t\tcase \"article\":\n\t\t\ttypeContent[\"@type\"] = \"Article\"\n\t\t\ttypeContent.articleSection = typeMeta.section\n\t\t\ttypeContent.headline = title\n\t\t\ttypeContent[\"publisher\"] = {\n\t\t\t\t\"@type\": \"Organization\",\n\t\t\t\tname: typeMeta.publisher_name,\n\t\t\t\tdescription: \"A news site.\",\n\t\t\t\tsameAs: typeMeta.publisher,\n\t\t\t}\n\t\t\ttypeContent.keywords = keywords.join(\",\")\n\t\t\tbreak\n\t\t// eslint-disable-next-line no-fallthrough\n\t\tcase \"NewsArticle\":\n\t\t\ttypeContent[\"@type\"] = \"NewsArticle\"\n\t\t\ttypeContent.articleSection = typeMeta.section\n\t\t\ttypeContent.headline = title\n\t\t\ttypeContent[\"publisher\"] = {\n\t\t\t\t\"@type\": \"Organization\",\n\t\t\t\tname: typeMeta.publisher_name,\n\t\t\t\tdescription: \"A news site.\",\n\t\t\t\tsameAs: typeMeta.publisher,\n\t\t\t}\n\t\t\ttypeContent.keywords = keywords.join(\",\")\n\t\t\tbreak\n\t\tcase \"profile\":\n\t\t\t// typeContent = \"profile\"\n\t\t\ttypeContent[\"@type\"] = \"Profile\"\n\t\t\tbreak\n\t\tcase \"place\":\n\t\t\t// typeContent = \"place\"\n\t\t\tbreak\n\t\tcase \"book\":\n\t\t\t// typeContent = \"book\"\n\t\t\ttypeTags = typeMeta.map(meta => (\n\t\t\t\t<meta\n\t\t\t\t\tproperty={\"book:\" + meta.key}\n\t\t\t\t\tkey={meta.key}\n\t\t\t\t\tcontent={meta.value}\n\t\t\t\t/>\n\t\t\t))\n\t\t\tkeywords.forEach(tag => {\n\t\t\t\ttypeTags.push(\n\t\t\t\t\t<meta property=\"book:tag\" key={\"book-tag-\" + tag} content={tag} />\n\t\t\t\t)\n\t\t\t})\n\t\t\tbreak\n\t\tcase \"books.author\":\n\t\t\t// typeContent = \"books.author\"\n\t\t\tbreak\n\t\tcase \"books.quotes\":\n\t\t\t// typeContent = \"books.quotes\"\n\t\t\tbreak\n\t\tcase \"song\":\n\t\t\t// typeContent = \"music.song\"\n\t\t\ttypeTags = typeMeta.map(meta => (\n\t\t\t\t<meta\n\t\t\t\t\tproperty={\"music.song:\" + meta.key}\n\t\t\t\t\tkey={meta.key}\n\t\t\t\t\tcontent={meta.value}\n\t\t\t\t/>\n\t\t\t))\n\t\t\tbreak\n\t\tcase \"album\":\n\t\t\t// typeContent = \"music.album\"\n\t\t\ttypeTags = typeMeta.map(meta => (\n\t\t\t\t<meta\n\t\t\t\t\tproperty={\"music.album:\" + meta.key}\n\t\t\t\t\tkey={meta.key}\n\t\t\t\t\tcontent={meta.value}\n\t\t\t\t/>\n\t\t\t))\n\t\t\tbreak\n\t\tcase \"playlist\":\n\t\t\t// typeContent = \"music.playlist\"\n\t\t\tbreak\n\t\tcase \"radio_station\":\n\t\t\t// typeContent = \"music.radio_station\"\n\t\t\tbreak\n\t\tcase \"movie\":\n\t\t\t// typeContent = \"video.movie\"\n\t\t\ttypeTags = typeMeta.map(meta => (\n\t\t\t\t<meta\n\t\t\t\t\tproperty={\"video.movie:\" + meta.key}\n\t\t\t\t\tkey={meta.key}\n\t\t\t\t\tcontent={meta.value}\n\t\t\t\t/>\n\t\t\t))\n\t\t\tbreak\n\t\tdefault:\n\t\t\ttypeContent = defaultJSONLD\n\t\t\tbreak\n\t}\n\n\ttypeContent.dateModified = new Date().toISOString()\n\ttypeContent.datePublished = new Date().toISOString()\n\ttypeContent.isAccessibleForFree = \"True\"\n\ttypeContent[\"isPartOf\"] = {\n\t\t\"@type\": [\"CreativeWork\", \"Product\", \"Blog\"],\n\t\tname: title,\n\t\tproductID: siteUrl,\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Helmet defer={false}>\n\t\t\t\t<script type=\"application/ld+json\">{JSON.stringify(typeContent)}</script>\n\t\t\t</Helmet>\n\t\t</React.Fragment>\n\t)\n}\n\nexport default SchemaOrg\n","import React from \"react\"\nimport Helmet from \"react-helmet\"\n\nconst Twitter = props => {\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Helmet defer={false}>\n\t\t\t\t{/* Twitter Card tags */}\n\t\t\t\t<meta name=\"twitter:card\" content=\"summary_large_image\" />\n\t\t\t\t<meta name=\"twitter:creator\" content={props.twitter} />\n\t\t\t\t<meta name=\"twitter:title\" content={props.title} />\n\t\t\t\t<meta name=\"twitter:description\" content={props.description} />\n\t\t\t\t<meta name=\"twitter:image\" content={props.image} />\n\t\t\t</Helmet>\n\t\t</React.Fragment>\n\t)\n}\n\nexport default Twitter\n","import React from \"react\"\nimport Helmet from \"react-helmet\"\n\nconst OpenGraph = props => {\n\tconst {\n\t\turl,\n\t\ttitle,\n\t\tdescription,\n\t\timage,\n\t\tfbAppId,\n\t\tisType,\n\t\tsiteName,\n\t\ttypeMeta,\n\t\tkeywords,\n\t} = props\n\tlet typeContent = \"\"\n\tlet typeTags = null\n\tswitch (isType) {\n\t\tcase \"website\":\n\t\t\ttypeContent = \"website\"\n\t\t\tbreak\n\t\tcase \"article\":\n\t\tcase \"blog\":\n\t\tcase \"NewsArticle\":\n\t\t\ttypeContent = \"article\"\n\t\t\ttypeTags = Object.keys(typeMeta).map(key => (\n\t\t\t\t<meta property={\"article:\" + key} key={key} content={typeMeta[key]} />\n\t\t\t))\n\t\t\tkeywords.forEach(tag => {\n\t\t\t\ttypeTags.push(\n\t\t\t\t\t<meta\n\t\t\t\t\t\tproperty=\"article:tag\"\n\t\t\t\t\t\tkey={\"article-tag-\" + tag}\n\t\t\t\t\t\tcontent={tag}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t})\n\t\t\tbreak\n\t\tcase \"profile\":\n\t\t\ttypeContent = \"profile\"\n\t\t\ttypeTags = Object.keys(typeMeta).map(key => (\n\t\t\t\t<meta property={\"profile:\" + key} key={key} content={typeMeta[key]} />\n\t\t\t))\n\t\t\tbreak\n\t\tcase \"place\":\n\t\t\ttypeContent = \"place\"\n\t\t\tbreak\n\t\tcase \"book\":\n\t\t\ttypeContent = \"book\"\n\t\t\ttypeTags = Object.keys(typeMeta).map(key => (\n\t\t\t\t<meta property={\"book:\" + key} key={key} content={typeMeta[key]} />\n\t\t\t))\n\t\t\tkeywords.forEach(tag => {\n\t\t\t\ttypeTags.push(\n\t\t\t\t\t<meta property=\"book:tag\" key={\"book-tag-\" + tag} content={tag} />\n\t\t\t\t)\n\t\t\t})\n\t\t\tbreak\n\t\tcase \"books.author\":\n\t\t\ttypeContent = \"books.author\"\n\t\t\tbreak\n\t\tcase \"books.quotes\":\n\t\t\ttypeContent = \"books.quotes\"\n\t\t\tbreak\n\t\tcase \"song\":\n\t\t\ttypeContent = \"music.song\"\n\t\t\ttypeTags = Object.keys(typeMeta).map(key => (\n\t\t\t\t<meta\n\t\t\t\t\tproperty={\"music.song:\" + key}\n\t\t\t\t\tkey={key}\n\t\t\t\t\tcontent={typeMeta[key]}\n\t\t\t\t/>\n\t\t\t))\n\t\t\tbreak\n\t\tcase \"album\":\n\t\t\ttypeContent = \"music.album\"\n\t\t\ttypeTags = Object.keys(typeMeta).map(key => (\n\t\t\t\t<meta\n\t\t\t\t\tproperty={\"music.album:\" + key}\n\t\t\t\t\tkey={key}\n\t\t\t\t\tcontent={typeMeta[key]}\n\t\t\t\t/>\n\t\t\t))\n\t\t\tbreak\n\t\tcase \"playlist\":\n\t\t\ttypeContent = \"music.playlist\"\n\t\t\tbreak\n\t\tcase \"radio_station\":\n\t\t\ttypeContent = \"music.radio_station\"\n\t\t\tbreak\n\t\tcase \"movie\":\n\t\t\ttypeContent = \"video.movie\"\n\t\t\ttypeTags = Object.keys(typeMeta).map(key => (\n\t\t\t\t<meta\n\t\t\t\t\tproperty={\"video.movie:\" + key}\n\t\t\t\t\tkey={key}\n\t\t\t\t\tcontent={typeMeta[key]}\n\t\t\t\t/>\n\t\t\t))\n\t\t\tbreak\n\t\tdefault:\n\t\t\ttypeContent = \"website\"\n\t\t\tbreak\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Helmet defer={false}>\n\t\t\t\t<meta property=\"og:url\" content={url} />\n\t\t\t\t<meta property=\"og:type\" content={typeContent} />\n\t\t\t\t<meta property=\"og:title\" content={title} />\n\t\t\t\t<meta property=\"og:description\" content={description} />\n\t\t\t\t<meta property=\"og:image\" content={image} />\n\t\t\t\t{fbAppId ? <meta property=\"fb:app_id\" content={fbAppId} /> : null}\n\t\t\t\t<meta property=\"og:locale\" content=\"en_US\" />\n\t\t\t\t<meta property=\"og:site_name\" content={siteName} />\n\t\t\t\t{typeTags}\n\t\t\t</Helmet>\n\t\t</React.Fragment>\n\t)\n}\n\nexport default OpenGraph\n","import path from \"path\"\nimport React from \"react\"\nimport Helmet from \"react-helmet\"\nimport PropTypes from \"prop-types\"\nimport SchemaOrg from \"./Meta/SchemaOrg\"\nimport Twitter from \"./Meta/Twitter\"\nimport OpenGraph from \"./Meta/OpenGraph\"\nimport { useSiteMetadata } from \"../hooks/use-site-metadata\"\nimport styles from \"../styles/strongSlant.module.css\"\n\nconst SEO = ({ postMeta, isType, typeMeta, postPath, postDefaults }) => {\n\tconst {\n\t\ttitle,\n\t\tdescription,\n\t\timage,\n\t\tname,\n\t\tgivenName,\n\t\tfamilyName,\n\t\talternateName,\n\t\turl,\n\t\ttwitter,\n\t\tfbAppID,\n\t\tkeywords,\n\t\tdateModified,\n\t} = useSiteMetadata()\n\n\tlet defaultDescription = false\n\tif (postDefaults.description) {\n\t\tdefaultDescription = `${postDefaults.description} ${name}`\n\t}\n\tconst pageTitle = postMeta.title || title\n\tconst pageDescription =\n\t\tpostMeta.description ||\n\t\tpostMeta.excerpt ||\n\t\tpostMeta.content ||\n\t\tdefaultDescription ||\n\t\tdescription\n\tconst postImage = postMeta.image || image\n\tconst pageUrl = postPath ? `${url}${path.sep}${postPath}` : url\n\tconst datePublished = isType === \"article\" ? postMeta.datePublished : false\n\ttypeMeta.published_time = datePublished\n\ttypeMeta.section = postMeta.section || postMeta.topic || postMeta.type\n\ttypeMeta.author = name\n\tlet completeKeywords = []\n\tif (postMeta.keywords && Array.isArray(postMeta.keywords)) {\n\t\tcompleteKeywords = postMeta.keywords\n\t} else if (postMeta.keywords) {\n\t\tcompleteKeywords.push(postMeta.keywords)\n\t}\n\tif (typeMeta.section && !completeKeywords.includes(typeMeta.section)) {\n\t\tcompleteKeywords.push(typeMeta.section)\n\t}\n\tconst keywordsString = completeKeywords.join(\",\")\n\tconst siteImage = image\n\t// https://css-tricks.com/its-all-in-the-head-managing-the-document-head-of-a-react-powered-site-with-react-helmet/\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Helmet defer={false}>\n\t\t\t\t<body className={styles.fnw} />\n\t\t\t\t{/* General tags */}\n\t\t\t\t<title>{pageTitle}</title>\n\t\t\t\t<meta name=\"title\" content={pageTitle} />\n\t\t\t\t<meta name=\"description\" content={pageDescription} />\n\t\t\t\t<meta name=\"image\" content={postImage} />\n\t\t\t\t<meta name=\"author\" content={name} />\n\t\t\t\t<meta name=\"keywords\" content={keywordsString} />\n\t\t\t\t<body className={styles.fnw} />\n\t\t\t</Helmet>\n\t\t\t<Twitter\n\t\t\t\ttwitter={twitter}\n\t\t\t\ttitle={pageTitle}\n\t\t\t\tdescription={pageDescription}\n\t\t\t\timage={postImage}\n\t\t\t/>\n\t\t\t<OpenGraph\n\t\t\t\turl={pageUrl}\n\t\t\t\ttitle={pageTitle}\n\t\t\t\tdescription={pageDescription}\n\t\t\t\timage={postImage}\n\t\t\t\tfbAppId={fbAppID}\n\t\t\t\tisType={isType}\n\t\t\t\tsiteName={title}\n\t\t\t\ttypeMeta={typeMeta}\n\t\t\t\tauthor={name}\n\t\t\t\tkeywords={completeKeywords}\n\t\t\t/>\n\t\t\t<SchemaOrg\n\t\t\t\turl={pageUrl}\n\t\t\t\tsiteUrl={url}\n\t\t\t\tsiteDescription={description}\n\t\t\t\tsiteImage={siteImage}\n\t\t\t\ttitle={pageTitle}\n\t\t\t\tdescription={pageDescription}\n\t\t\t\timage={postImage}\n\t\t\t\tfbAppId={fbAppID}\n\t\t\t\tisType={isType}\n\t\t\t\tsiteName={title}\n\t\t\t\ttypeMeta={typeMeta}\n\t\t\t\tauthor={name}\n\t\t\t\tdateModified={dateModified}\n\t\t\t\tdatePublished={postMeta.date}\n\t\t\t\tkeywords={completeKeywords}\n\t\t\t\tgivenName={givenName}\n\t\t\t\tfamilyName={familyName}\n\t\t\t\talternateName={alternateName}\n\t\t\t/>\n\t\t</React.Fragment>\n\t)\n}\n\nSEO.propTypes = {\n\tpostMeta: PropTypes.any,\n\ttypeMeta: PropTypes.any.isRequired,\n\tisType: PropTypes.string,\n\tpostPath: PropTypes.string,\n}\n\nSEO.defaultProps = {\n\tisType: \"article\",\n\tpostImage: null,\n}\n\nexport default SEO\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Link from \"gatsby-link\"\nimport Img from \"gatsby-image\"\nimport styles from \"../styles/strongSlant.module.css\"\nimport BreadCrumb from \"../components/BreadCrumb\"\nimport HumanReadableDate from \"../components/HumanReadableDate\"\nimport SEO from \"../components/SEO\"\nimport path from \"path\"\nimport { useSiteMetadata } from \"../hooks/use-site-metadata\"\n\nexport default ({ data, pageContext }) => {\n\tconsole.log(\"Data: \", data, pageContext)\n\tconst { url } = useSiteMetadata()\n\tvar previewImage = false\n\tvar isFluid = false\n\tvar achievementObj = data.achievement.achievement\n\tvar queryResult = data.achievement\n\tvar origImage = \"\"\n\tif (queryResult.fields.imgObj) {\n\t\tif (\n\t\t\tqueryResult.fields.imgObj.childImageSharp &&\n\t\t\tqueryResult.fields.imgObj.childImageSharp.fluid\n\t\t) {\n\t\t\tpreviewImage = queryResult.fields.imgObj.childImageSharp.fluid\n\t\t\tisFluid = true\n\t\t} else if (queryResult.fields.imgObj.publicURL) {\n\t\t\tpreviewImage = queryResult.fields.imgObj.publicURL\n\t\t}\n\t}\n\tif (queryResult.fields.imgObj && queryResult.fields.imgObj.publicURL) {\n\t\torigImage = queryResult.fields.imgObj.publicURL\n\t}\n\tvar previewEl = null\n\tif (previewImage && isFluid) {\n\t\tpreviewEl = (\n\t\t\t<Img\n\t\t\t\tfluid={queryResult.fields.imgObj.childImageSharp.fluid}\n\t\t\t\talt=\"\"\n\t\t\t\tclassName={styles.bbImageWrapper}\n\t\t\t/>\n\t\t)\n\t} else if (previewImage) {\n\t\tpreviewEl = (\n\t\t\t<img src={previewImage} alt=\"\" className={styles.bbImageWrapper} />\n\t\t)\n\t} else {\n\t\tpreviewEl = <div className={styles.noImg}></div>\n\t}\n\n\tvar publisherUrl = \"\"\n\tvar originalContent, archivedContent, awardedBy\n\ttry {\n\t\tif (achievementObj.affiliation) {\n\t\t\tawardedBy = (\n\t\t\t\t<h4 className=\"source-with-origin-url\">\n\t\t\t\t\tFrom: <br /> {achievementObj.affiliation}\n\t\t\t\t</h4>\n\t\t\t)\n\t\t\tif (achievementObj.isBasedOn) {\n\t\t\t\toriginalContent = (\n\t\t\t\t\t<span className={styles.clipLink}>\n\t\t\t\t\t\t<a href={achievementObj.isBasedOn}>View achievement</a>\n\t\t\t\t\t</span>\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\toriginalContent = <span className={styles.clipLink}></span>\n\t\t\t}\n\t\t} else {\n\t\t\tpublisherUrl = \"\"\n\t\t\tawardedBy = (\n\t\t\t\t<h4 className=\"source-without-origin-url\">\n\t\t\t\t\tFrom: <br /> {achievementObj.affiliation}\n\t\t\t\t</h4>\n\t\t\t)\n\t\t\toriginalContent = (\n\t\t\t\t<span className={styles.clipLink}>\n\t\t\t\t\tOriginal Achievement No Longer Available\n\t\t\t\t</span>\n\t\t\t)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log(\"Achievement build error occured \", e)\n\t\toriginalContent = <span></span>\n\t}\n\tvar archiveFile = \"\"\n\tif (queryResult.mediaFile && queryResult.mediaFile.publicURL) {\n\t\tarchiveFile = queryResult.mediaFile\n\t}\n\tif (achievementObj.media && archiveFile.publicURL) {\n\t\tarchivedContent = (\n\t\t\t<span className={styles.clipLink}>\n\t\t\t\t<span className={styles.spacer}>|</span>\n\t\t\t\t<a\n\t\t\t\t\thref={archiveFile.publicURL}\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t>\n\t\t\t\t\tArchived Achievement\n\t\t\t\t</a>\n\t\t\t</span>\n\t\t)\n\t} else {\n\t\tarchivedContent = <span className={styles.clipLink}></span>\n\t}\n\tvar awardDate\n\tif (achievementObj.date) {\n\t\tvar humanReadableDate = <HumanReadableDate date={achievementObj.date} />\n\t\tawardDate = (\n\t\t\t<span>\n\t\t\t\t<strong>Occurred on</strong>\n\t\t\t\t<span>:</span> {humanReadableDate}\n\t\t\t</span>\n\t\t)\n\t} else {\n\t\tawardDate = <span></span>\n\t}\n\tvar homeLink = (\n\t\t<Link to={\"/\" + achievementObj.type} key=\"clipsHomepage\">\n\t\t\t<span\n\t\t\t\tstyle={{\n\t\t\t\t\ttextDecoration: \"underline\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tAll {achievementObj.type}\n\t\t\t</span>\n\t\t</Link>\n\t)\n\tvar previousLink, nextLink\n\tif (pageContext.previous) {\n\t\tpreviousLink = (\n\t\t\t<Link\n\t\t\t\tto={\"/achievement/\" + pageContext.previous.slug}\n\t\t\t\tkey={pageContext.previous.id}\n\t\t\t\ttitle={pageContext.previous.title}\n\t\t\t>\n\t\t\t\t<span\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\ttextDecoration: \"underline\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tPrevious Achievement\n\t\t\t\t</span>\n\t\t\t</Link>\n\t\t)\n\t} else {\n\t\tpreviousLink = homeLink\n\t}\n\tif (pageContext.next) {\n\t\tnextLink = (\n\t\t\t<Link\n\t\t\t\tto={\"/achievement/\" + pageContext.next.slug}\n\t\t\t\tkey={pageContext.next.id}\n\t\t\t\ttitle={pageContext.next.title}\n\t\t\t>\n\t\t\t\t<span\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\ttextDecoration: \"underline\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tNext Achievement\n\t\t\t\t</span>\n\t\t\t</Link>\n\t\t)\n\t} else {\n\t\tnextLink = homeLink\n\t}\n\tconst imgBlock = /Transparent-l/.test(origImage) ? (\n\t\t<div />\n\t) : (\n\t\t<div data-img={origImage} className={styles.flexCol}>\n\t\t\t{previewEl}\n\t\t</div>\n\t)\n\treturn (\n\t\t<Layout>\n\t\t\t<SEO\n\t\t\t\tpostMeta={achievementObj}\n\t\t\t\tpostDefaults={{ description: \"Achievement by Jordan Gass-Poore'\" }}\n\t\t\t\tpostPath={\"achievement/\" + achievementObj.slug}\n\t\t\t\tisType={`website`}\n\t\t\t\ttypeMeta={{\n\t\t\t\t\tisBasedOn: achievementObj.isBasedOn,\n\t\t\t\t\tpublisher: publisherUrl,\n\t\t\t\t\tpublisher_name: achievementObj.publishedBy,\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<div id={queryResult.achievement.id} className={styles.basicContainer}>\n\t\t\t\t<BreadCrumb\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tdisplay: \"block\",\n\t\t\t\t\t\tfloat: \"left\",\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\ttop: \"calc(3rem - 34px)\",\n\t\t\t\t\t\tpaddingLeft: \"20px\",\n\t\t\t\t\t}}\n\t\t\t\t\tprecursors={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlink: `${url}${path.sep}${achievementObj.type.toLowerCase()}`,\n\t\t\t\t\t\t\ttext: \"Achievements List\",\n\t\t\t\t\t\t},\n\t\t\t\t\t]}\n\t\t\t\t>\n\t\t\t\t\tAchievement\n\t\t\t\t</BreadCrumb>\n\t\t\t\t<h1 className={styles.clipTitle}>{achievementObj.title}</h1>\n\t\t\t\t<div className={styles.flexRow}>\n\t\t\t\t\t<div className={styles.flexCol}>\n\t\t\t\t\t\t<div className={styles.bbDataHolder}>\n\t\t\t\t\t\t\t{originalContent} {archivedContent}\n\t\t\t\t\t\t\t<h2>About this achievement: </h2>\n\t\t\t\t\t\t\t{awardedBy}\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{awardDate}\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<strong>About</strong>: {achievementObj.description}\n\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{ __html: achievementObj.content }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{imgBlock}\n\t\t\t\t\t<BreadCrumb\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tdisplay: \"block\",\n\t\t\t\t\t\t\tfloat: \"left\",\n\t\t\t\t\t\t\tposition: \"relative\",\n\t\t\t\t\t\t\tmarginTop: \"3rem\",\n\t\t\t\t\t\t\tpaddingLeft: \"20px\",\n\t\t\t\t\t\t\tlineHeight: \"4px\",\n\t\t\t\t\t\t\tpaddingBottom: \"12px\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{previousLink} | {nextLink}\n\t\t\t\t\t</BreadCrumb>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Layout>\n\t)\n}\n\nexport const query = graphql`\n\tquery($id: String!, $mediaName: String) {\n\t\tachievement(id: { eq: $id }) {\n\t\t\tid\n\t\t\tachievement {\n\t\t\t\ttitle\n\t\t\t\tdate\n\t\t\t\tcontent\n\t\t\t\taffiliation\n\t\t\t\ttype\n\t\t\t\tmedia\n\t\t\t\tdescription\n\t\t\t\texcerpt\n\t\t\t\timageSource\n\t\t\t\tisBasedOn\n\t\t\t\tslug\n\t\t\t}\n\t\t\tfields {\n\t\t\t\timgObj {\n\t\t\t\t\tid\n\t\t\t\t\tpublicURL\n\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\tfluid(maxWidth: 400) {\n\t\t\t\t\t\t\t...GatsbyImageSharpFluid\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmediaFile: file(\n\t\t\tsourceInstanceName: { eq: \"media\" }\n\t\t\trelativePath: { eq: $mediaName }\n\t\t) {\n\t\t\tpublicURL\n\t\t\tfields {\n\t\t\t\tslug\n\t\t\t}\n\t\t}\n\t}\n`\n"],"sourceRoot":""}